# Program to multiply two 8-bit binary numbers
# Use repeated addition
# By Juan Carlos Rojas
#
# The operands are read from memory locations:
#   0x00    first_number 
#   0x01    second_number
# The result will be placed in memory at:
#   0x02    result

# Variables
def src1 0x00
def src2 0x01
def dst 0x02
# Other macros
def acc r2
def cnt r3
def one r4

# Read the first two operands
ld src1 r0
ld src2 r1

# Use r2 as an accumulator, starting at 0
ldi 0x00 acc

# Use r3 as a loop counter, starting at 1, ending at the value in r1 (the second operand)
ldi 0x01 cnt

# This is a constant to help increment the loop counter
ldi 0x01 one

loop:
# Add r0 to the accumulator r2
add r0 acc acc

# Increment the loop counter
add cnt one cnt

# Check if we have reached the end of the loop
gt cnt r1 r5

# Repeat the loop
skipif r5 
jmp loop

# Store the result into the desired memory location
st acc dst

# All done
halt
