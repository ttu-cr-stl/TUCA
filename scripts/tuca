#!/bin/bash

# Get the directory containing this script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_DIR="$( cd "$SCRIPT_DIR/.." && pwd )"

# Function to show usage
show_usage() {
    echo "Usage: tuca <command> [options]"
    echo ""
    echo "Commands:"
    echo "  build <program>              Build program"
    echo "  emu <program> [test]         Run emulator (all tests by default)"
    echo "  verify <program> <test>      Compare emulator vs Verilog"
    echo "  clean [program]              Clean build artifacts"
    echo ""
    echo "Options:"
    echo "  --verbose                    Show detailed output"
    echo ""
    echo "Examples:"
    echo "  tuca build hw2              # Build hw2 program"
    echo "  tuca emu hw2                # Run all tests"
    echo "  tuca emu hw2 mem1           # Run specific test"
    echo "  tuca verify hw2 mem1        # Compare results"
    echo "  tuca clean                  # Clean all"
    exit 1
}

# Check for minimum arguments
if [ $# -lt 2 ]; then
    show_usage
fi

command=$1
program=$2
test_name=$3

case $command in
    "build")
        if [ -z "$program" ]; then
            echo "Error: build command requires program name"
            echo "Usage: tuca build <program>"
            exit 1
        fi
        # Run assembler to generate .mem file
        python3 "$ROOT_DIR/Pipeline/Assembler/src/build.py" \
            "$ROOT_DIR/Programs/$program/prog.txt" \
            "$ROOT_DIR/Programs/$program/build/prog.mem"
        ;;
        
    "emu")
        if [ -z "$program" ]; then
            echo "Error: emu command requires program name"
            echo "Usage: tuca emu <program> [test] [--verbose]"
            exit 1
        fi
        
        prog_abs_path="$ROOT_DIR/Programs/$program/prog.txt"
        
        if [ -z "$test_name" ] || [ "$test_name" = "--verbose" ]; then
            # Run all tests (pass only program path and any flags)
            shift 2  # Remove 'emu' and program name
            python3 "$ROOT_DIR/Pipeline/Emulator/src/run.py" "$prog_abs_path" $@
        else
            # Run specific test
            mem_file="test_mems/$test_name.txt"
            mem_abs_path="$ROOT_DIR/Programs/$program/$mem_file"
            output_file="$ROOT_DIR/Programs/$program/results/emulator/$test_name.txt"
            shift 3  # Remove 'emu', program name, and test name
            python3 "$ROOT_DIR/Pipeline/Emulator/src/run.py" "$prog_abs_path" "$mem_abs_path" "$output_file" $@
        fi
        ;;
        
    "verify")
        if [ -z "$program" ] || [ -z "$test_name" ]; then
            echo "Error: verify command requires program and test name"
            echo "Usage: tuca verify <program> <test>"
            exit 1
        fi
        python3 "$ROOT_DIR/scripts/verify.py" \
            "$ROOT_DIR/Programs/$program/results/emulator/$test_name.txt" \
            "$ROOT_DIR/Programs/$program/results/verilog/$test_name.txt"
        ;;
        
    "clean")
        python3 "$ROOT_DIR/scripts/clean.py" ${program:+"$ROOT_DIR/Programs/$program"}
        ;;
        
    *)
        echo "Error: Unknown command '$command'"
        show_usage
        ;;
esac 